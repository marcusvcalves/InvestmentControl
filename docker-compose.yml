services:
  db:
    image: postgres:16-alpine
    container_name: investmentcontrol_db
    ports:
      - "5433:5432"
    environment:
      POSTGRES_DB: investment_control_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - db-data:/var/lib/postgresql/data

  zookeeper:
    image: confluentinc/cp-zookeeper:7.6.0
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "24920:24920"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  broker:
    image: confluentinc/cp-kafka:7.6.0
    hostname: broker
    container_name: broker
    ports:
      - "9092:9092"
      - "9093:9093"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1

  api:
    build:
      context: .
      dockerfile: InvestmentControl.ApplicationCore/Dockerfile
    container_name: investmentcontrol_api
    ports:
      - "8080:80"
    depends_on:
      - db
      - broker
    restart: always
    environment:
      ConnectionStrings__DefaultConnection: "Host=db;Port=5432;Database=investment_control_db;Username=postgres;Password=postgres"
      KAFKA_BOOTSTRAP_SERVERS: "broker:29092"
      ASPNETCORE_URLS: "http://+:80"
      ASPNETCORE_ENVIRONMENT: "Development"

  kafka_producer:
    build:
      context: .
      dockerfile: InvestmentControl.KafkaProducer/Dockerfile
    container_name: investment_kafka_producer
    depends_on:
      - broker
    environment:
      ConnectionStrings__DefaultConnection: "Host=db;Port=5432;Database=investment_control_db;Username=postgres;Password=postgres"
      KAFKA_BOOTSTRAP_SERVERS: "broker:29092"
      DOTNET_ENVIRONMENT: "Development"

  kafka_ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka_ui
    ports:
      - "9000:8080"
    restart: always
    environment:
      KAFKA_BROKERS: broker:29092
      DYNAMIC_CONFIG_ENABLED: 'true'
    depends_on:
      - broker
 
  consumer:
    build:
      context: .
      dockerfile: InvestmentControl.WorkerService/Dockerfile
    container_name: investment_kafka_consumer
    depends_on:
      - broker
    environment:
      KAFKA_BOOTSTRAP_SERVERS: "broker:29092"
      DOTNET_ENVIRONMENT: "Development"
      ConnectionStrings__DefaultConnection: "Host=db;Port=5432;Database=investment_control_db;Username=postgres;Password=postgres"

volumes:
  db-data: